# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
   #schedule:
    # * is a special character in YAML so you have to quote this string
  #  - cron:  '30 5,17 * * *'
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - dev
      #- 'releases/**-alpha'
      # - 'feature/**'
    tags-ignore:
      - 'v*'    
  pull_request:
    branches:
      - dev
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
     branch: ${{ steps.type.outputs.branch }}
    # modules: ${{ steps.vars.outputs.modules }}
   #  version: ${{ steps.vars.outputs.version }}
    env:
     DAY_OF_WEEK: Mon
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: "Hello world when it's Monday"
        if: ${{ env.DAY_OF_WEEK == 'Mon' }}
        run: echo "Hello $FIRST_NAME $middle_name $Last_Name, today is Monday!"
        env:
          FIRST_NAME: Mona
          middle_name: The
          Last_Name: Octocat
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        if: ${{ env.DAY_OF_WEEK == 'Mon' }}
        #if: ${{ github.ref == 'master' }}
        #  if: ${{ github.ref == 'refs/heads/main' }}
        # if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo Add other actions to build ${{ secrets.YOUR_NAME }},
          echo test, and deploy your project ${X-TOKEN}
        env:
          X-TOKEN:  ${{ secrets.YOUR_NAME }}
          
      - name: print list file
        run: ls
      
  

      - name: Version Composition
        id: composer
        uses: juliansangillo/version-composer@v1
  

      - name: Create Release
        id: release
        uses: actions/create-release@v1
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         tag_name: v${{ steps.composer.outputs.version }}
         release_name: Release ${{ steps.composer.outputs.raw-version }}
         draft: false
         prerelease: ${{ steps.composer.outputs.is-prerelease == 'true' }}

