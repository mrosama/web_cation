# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build ${{ secrets.YOUR_NAME }},
          echo test, and deploy your project ${X-TOKEN}
        env:
          X-TOKEN:  ${{ secrets.YOUR_NAME }}
          
      - name: print list file
        run: ls
      
      - name: Create Debloyment artifact
        env:
          GITHUB_SHA: ${{github.sha}}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=images *
      
      - name: store artifact for distribution
        uses: actions/upload-artifact@v2
        with:
          name: app.build
          path: ${{github.sha}}.tar.gz
          
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         WITH_V: true   

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
          
      - name: Run latest-tag
        uses: EndBug/latest-tag@latest
        with:
          # Default: 'latest'
         tag-name: v1-fix
         description: |
            description  in this Release
            - First Change
            - Second Change
    
